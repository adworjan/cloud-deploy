---
- name: Provision AWS Resources
  hosts: localhost
  gather_facts: no
  vars_files:
    - ./vars/default-vars.yml

  tasks:


   # VPC or Virtual Private Cloud.  The instance will be tied to a subnet that belongs to this particular VPC
    - name: "Create AWS VPC {{ ec2_prefix }}-vpc"
      ec2_vpc_net:
        name: "{{ ec2_prefix }}-vpc"
        cidr_block: "{{ ec2_vpc_cidr }}"
        tags:
          provisioner: mford
          application: "{{ application }}"
      register: create_vpc

    # If a secruity group is not created, instances will be tied to the Default secruity grouop that allows all traffic (non-secure)
    - name: "Create EC2 Security Group {{ec2_prefix }}-sg"
      ec2_group:
        name: "{{ ec2_prefix }}-sg"
        description: "Application VPC for {{ ec2_prefix }}"
        vpc_id: "{{create_vpc.vpc.id}}"
        tags:
          provisioner: mford
          Name: "{{ ec2_prefix }}-sg"
          application: "{{ application }}"
        rules:
          - proto: tcp
            ports:
            - 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            ports:
            - 3306 # for mysql
            cidr_ip: 0.0.0.0/0

    # This task is subdiving up the 192.168.0.0/24 and getting a smaller chunk, a /28
    - name: "Create Subnet for {{ ec2_prefix }}-vpc"
      ec2_vpc_subnet:
        vpc_id: "{{ create_vpc.vpc.id }}"
        map_public: yes
        cidr: "{{ ec2_vpc_subnet }}"
        tags:
          provisioner: mford
          application: "{{ application }}"
      register: create_subnet

    - name: Set ec2_subnet_id fact
      set_fact:
        ec2_vpc_subnet_id: "{{ create_subnet.subnet.id }}"

    # Create Internet Gateway and attach it to VPC.  This allows instances on this VPC to reach the Internet
    - name: "Create VPC Internet Gateway for {{ ec2_prefix }}-vpc"
      ec2_vpc_igw:
        vpc_id: "{{ create_vpc.vpc.id }}"
        tags:
          provisioner: mford
          application: "{{ application }}"
      register: igw

    # This task adds a route to the internet from the subnet through the IGW
    - name: Create a Default Route for the Subnet
      ec2_vpc_route_table:
        vpc_id: "{{ create_vpc.vpc.id }}"
        subnets:
          - "{{ create_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        tags:
          provisioner: mford
          application: "{{ application }}"
